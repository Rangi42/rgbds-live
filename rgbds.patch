diff --git a/include/asm/symbol.h b/include/asm/symbol.h
index e1a420e..4df87e6 100644
--- a/include/asm/symbol.h
+++ b/include/asm/symbol.h
@@ -109,6 +109,7 @@ void sym_ForEach(void (*func)(struct Symbol *, void *), void *arg);
 
 int32_t sym_GetValue(struct Symbol const *sym);
 void sym_SetExportAll(bool set);
+struct Symbol *sym_AddSecret();
 struct Symbol *sym_AddLocalReloc(char const *symName);
 struct Symbol *sym_AddReloc(char const *symName);
 void sym_Export(char const *symName);
diff --git a/src/asm/asmy.y b/src/asm/asmy.y
index c5f7082..4c67a21 100644
--- a/src/asm/asmy.y
+++ b/src/asm/asmy.y
@@ -663,7 +663,7 @@ lines		: /* empty */
 ;
 
 line		: label
-		| label cpu_command
+		| label { sym_AddSecret(); } cpu_command
 		| label macro
 		| label simple_pseudoop
 		| pseudoop
@@ -1502,7 +1502,7 @@ sectattrs	: /* empty */ {
 ;
 
 
-cpu_command	: { nPCOffset = 1; } z80_adc
+cpu_command : { nPCOffset = 1; } z80_adc
 		| { nPCOffset = 1; } z80_add
 		| { nPCOffset = 1; } z80_and
 		| { nPCOffset = 1; } z80_bit
diff --git a/src/asm/symbol.c b/src/asm/symbol.c
index 4887b36..e374cdd 100644
--- a/src/asm/symbol.c
+++ b/src/asm/symbol.c
@@ -361,6 +361,24 @@ struct Symbol *sym_AddSet(char const *symName, int32_t value)
 	return sym;
 }
 
+static uint32_t secret_counter = 0;
+struct Symbol *sym_AddSecret()
+{
+    char name[MAXSYMLEN + 1];
+    secret_counter += 1;
+    sprintf(name, ".__SEC_%x_%x_%s", secret_counter, nLineNo, tzCurrentFileName);
+    for(char* s = name + 1; *s; s++) {
+        if (*s == '.')
+            *s = '#';
+        if (*s == ':')
+            *s = 0;
+    }
+    if (symbolScope)
+        return sym_AddLocalReloc(name);
+    return sym_AddReloc(name + 1);
+}
+
+
 /*
  * Add a local (.name) relocatable symbol
  */
diff --git a/src/asm/warning.c b/src/asm/warning.c
index 8e3474b..9e92836 100644
--- a/src/asm/warning.c
+++ b/src/asm/warning.c
@@ -199,7 +199,7 @@ void verror(const char *fmt, va_list args, char const *flag)
 {
 	fputs("ERROR: ", stderr);
 	fstk_Dump();
-	fprintf(stderr, flag ? ": [-Werror=%s]\n    " : ":\n    ", flag);
+	fprintf(stderr, flag ? ": [-Werror=%s]: " : ": ", flag);
 	vfprintf(stderr, fmt, args);
 	fputc('\n', stderr);
 	fstk_DumpStringExpansions();
@@ -252,7 +252,7 @@ void warning(enum WarningID id, char const *fmt, ...)
 
 	fputs("warning: ", stderr);
 	fstk_Dump();
-	fprintf(stderr, ": [-W%s]\n    ", flag);
+	fprintf(stderr, ": [-W%s]: ", flag);
 	vfprintf(stderr, fmt, args);
 	fputc('\n', stderr);
 	fstk_DumpStringExpansions();
