diff --git a/include/asm/symbol.h b/include/asm/symbol.h
index 7bcc140..c2f2cfa 100644
--- a/include/asm/symbol.h
+++ b/include/asm/symbol.h
@@ -113,6 +113,7 @@ void sym_ForEach(void (*func)(struct Symbol *, void *), void *arg);
 
 int32_t sym_GetValue(struct Symbol const *sym);
 void sym_SetExportAll(bool set);
+struct Symbol *sym_AddSecret();
 struct Symbol *sym_AddLocalLabel(char const *symName);
 struct Symbol *sym_AddLabel(char const *symName);
 void sym_Export(char const *symName);
diff --git a/src/asm/parser.y b/src/asm/parser.y
index 9e57462..8857051 100644
--- a/src/asm/parser.y
+++ b/src/asm/parser.y
@@ -336,7 +336,7 @@ lines		: /* empty */
 ;
 
 line		: label '\n'
-		| label cpu_command '\n'
+		| label  { sym_AddSecret(); } cpu_command '\n'
 		| label macro '\n'
 		| label simple_pseudoop '\n'
 		| pseudoop '\n'
@@ -1094,7 +1094,7 @@ sectattrs	: /* empty */ {
 ;
 
 
-cpu_command	: { nPCOffset = 1; } z80_adc
+cpu_command : { nPCOffset = 1; } z80_adc
 		| { nPCOffset = 1; } z80_add
 		| { nPCOffset = 1; } z80_and
 		| { nPCOffset = 1; } z80_bit
diff --git a/src/asm/symbol.c b/src/asm/symbol.c
index 0070462..01a0ffc 100644
--- a/src/asm/symbol.c
+++ b/src/asm/symbol.c
@@ -352,6 +352,26 @@ static struct Symbol *createNonrelocSymbol(char const *symbolName)
 	return symbol;
 }
 
+static uint32_t secret_counter = 0;
+struct Symbol *sym_AddSecret()
+{
+    struct Symbol *sym;
+    char name[MAXSYMLEN + 1];
+    secret_counter += 1;
+    sprintf(name, "__SEC_%x_%x_%s", secret_counter, lexer_GetLineNo(), fstk_GetFileName());
+
+    sym = createsymbol(name);
+	sym->type = SYM_LABEL;
+    sym->value = sect_GetSymbolOffset();
+    sym->isExported = true;
+
+	sym->section = sect_GetSymbolSection();
+
+	updateSymbolFilename(sym);
+    return sym;
+}
+
+
 /*
  * Add an equated symbol
  */
diff --git a/src/asm/warning.c b/src/asm/warning.c
index f8ea7cb..5eb5fe4 100644
--- a/src/asm/warning.c
+++ b/src/asm/warning.c
@@ -241,7 +241,7 @@ void warning(enum WarningID id, char const *fmt, ...)
 		return;
 
 	case WARNING_ERROR:
-		printDiag(fmt, args, "ERROR: ", ": [-Werror=%s]\n    ", flag);
+		printDiag(fmt, args, "ERROR: ", ": [-Werror=%s]    ", flag);
 		va_end(args);
 		return;
 
@@ -253,7 +253,7 @@ void warning(enum WarningID id, char const *fmt, ...)
 		break;
 	}
 
-	printDiag(fmt, args, "warning: ", ": [-W%s]\n    ", flag);
+	printDiag(fmt, args, "warning: ", ": [-W%s]    ", flag);
 
 	va_end(args);
 }
